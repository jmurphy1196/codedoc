[{"/mnt/c/Users/jmurp/Documents/codedoc/src/index.tsx":"1","/mnt/c/Users/jmurp/Documents/codedoc/src/hooks/use-actions.ts":"2","/mnt/c/Users/jmurp/Documents/codedoc/src/components/cell-list.tsx":"3","/mnt/c/Users/jmurp/Documents/codedoc/src/components/auth-form.tsx":"4","/mnt/c/Users/jmurp/Documents/codedoc/src/redux/index.ts":"5","/mnt/c/Users/jmurp/Documents/codedoc/src/hooks/use-typed-selector.ts":"6","/mnt/c/Users/jmurp/Documents/codedoc/src/components/add-cell.tsx":"7","/mnt/c/Users/jmurp/Documents/codedoc/src/components/cell-list-item.tsx":"8","/mnt/c/Users/jmurp/Documents/codedoc/src/components/navbar.tsx":"9","/mnt/c/Users/jmurp/Documents/codedoc/src/redux/store.ts":"10","/mnt/c/Users/jmurp/Documents/codedoc/src/components/action-bar.tsx":"11","/mnt/c/Users/jmurp/Documents/codedoc/src/components/text-editor.tsx":"12","/mnt/c/Users/jmurp/Documents/codedoc/src/components/code-cell.tsx":"13","/mnt/c/Users/jmurp/Documents/codedoc/src/redux/action-creators/index.ts":"14","/mnt/c/Users/jmurp/Documents/codedoc/src/redux/reducers/index.ts":"15","/mnt/c/Users/jmurp/Documents/codedoc/src/hooks/use-cumulative-code.ts":"16","/mnt/c/Users/jmurp/Documents/codedoc/src/components/action-button.tsx":"17","/mnt/c/Users/jmurp/Documents/codedoc/src/components/resizable.tsx":"18","/mnt/c/Users/jmurp/Documents/codedoc/src/components/preview.tsx":"19","/mnt/c/Users/jmurp/Documents/codedoc/src/components/code-editor.tsx":"20","/mnt/c/Users/jmurp/Documents/codedoc/src/redux/action-types/index.ts":"21","/mnt/c/Users/jmurp/Documents/codedoc/src/redux/reducers/cells-reducer.ts":"22","/mnt/c/Users/jmurp/Documents/codedoc/src/redux/reducers/user-reducer.ts":"23","/mnt/c/Users/jmurp/Documents/codedoc/src/redux/reducers/bundles-reducer.ts":"24","/mnt/c/Users/jmurp/Documents/codedoc/src/bundler/index.ts":"25","/mnt/c/Users/jmurp/Documents/codedoc/src/bundler/plugins/fetch-plugin.ts":"26","/mnt/c/Users/jmurp/Documents/codedoc/src/bundler/plugins/unpkg-path-plugin.ts":"27","/mnt/c/Users/jmurp/Documents/codedoc/src/components/my-account.tsx":"28","/mnt/c/Users/jmurp/Documents/codedoc/src/components/save-codedoc.tsx":"29","/mnt/c/Users/jmurp/Documents/codeDoc/src/index.tsx":"30","/mnt/c/Users/jmurp/Documents/codeDoc/src/hooks/use-actions.ts":"31","/mnt/c/Users/jmurp/Documents/codeDoc/src/components/cell-list.tsx":"32","/mnt/c/Users/jmurp/Documents/codeDoc/src/components/my-account.tsx":"33","/mnt/c/Users/jmurp/Documents/codeDoc/src/components/auth-form.tsx":"34","/mnt/c/Users/jmurp/Documents/codeDoc/src/redux/index.ts":"35","/mnt/c/Users/jmurp/Documents/codeDoc/src/hooks/use-typed-selector.ts":"36","/mnt/c/Users/jmurp/Documents/codeDoc/src/components/navbar.tsx":"37","/mnt/c/Users/jmurp/Documents/codeDoc/src/components/cell-list-item.tsx":"38","/mnt/c/Users/jmurp/Documents/codeDoc/src/components/add-cell.tsx":"39","/mnt/c/Users/jmurp/Documents/codeDoc/src/redux/store.ts":"40","/mnt/c/Users/jmurp/Documents/codeDoc/src/components/share-codedoc.tsx":"41","/mnt/c/Users/jmurp/Documents/codeDoc/src/components/code-cell.tsx":"42","/mnt/c/Users/jmurp/Documents/codeDoc/src/components/save-codedoc.tsx":"43","/mnt/c/Users/jmurp/Documents/codeDoc/src/components/text-editor.tsx":"44","/mnt/c/Users/jmurp/Documents/codeDoc/src/components/action-bar.tsx":"45","/mnt/c/Users/jmurp/Documents/codeDoc/src/redux/reducers/index.ts":"46","/mnt/c/Users/jmurp/Documents/codeDoc/src/redux/action-creators/index.ts":"47","/mnt/c/Users/jmurp/Documents/codeDoc/src/hooks/use-cumulative-code.ts":"48","/mnt/c/Users/jmurp/Documents/codeDoc/src/components/code-editor.tsx":"49","/mnt/c/Users/jmurp/Documents/codeDoc/src/components/preview.tsx":"50","/mnt/c/Users/jmurp/Documents/codeDoc/src/components/resizable.tsx":"51","/mnt/c/Users/jmurp/Documents/codeDoc/src/components/action-button.tsx":"52","/mnt/c/Users/jmurp/Documents/codeDoc/src/redux/action-types/index.ts":"53","/mnt/c/Users/jmurp/Documents/codeDoc/src/redux/reducers/user-reducer.ts":"54","/mnt/c/Users/jmurp/Documents/codeDoc/src/redux/reducers/bundles-reducer.ts":"55","/mnt/c/Users/jmurp/Documents/codeDoc/src/redux/reducers/cells-reducer.ts":"56","/mnt/c/Users/jmurp/Documents/codeDoc/src/bundler/index.ts":"57","/mnt/c/Users/jmurp/Documents/codeDoc/src/bundler/plugins/fetch-plugin.ts":"58","/mnt/c/Users/jmurp/Documents/codeDoc/src/bundler/plugins/unpkg-path-plugin.ts":"59","/mnt/c/Users/jmurp/Documents/codeDoc/src/components/error-message.tsx":"60","/mnt/c/Users/jmurp/Documents/codeDoc/src/components/documentation.tsx":"61"},{"size":1562,"mtime":1617426336872,"results":"62","hashOfConfig":"63"},{"size":336,"mtime":1617424439724,"results":"64","hashOfConfig":"63"},{"size":955,"mtime":1617424439657,"results":"65","hashOfConfig":"63"},{"size":6060,"mtime":1617424439640,"results":"66","hashOfConfig":"63"},{"size":106,"mtime":1617424439758,"results":"67","hashOfConfig":"63"},{"size":183,"mtime":1617424439733,"results":"68","hashOfConfig":"63"},{"size":1122,"mtime":1617424439634,"results":"69","hashOfConfig":"63"},{"size":838,"mtime":1617424439649,"results":"70","hashOfConfig":"63"},{"size":2457,"mtime":1617432027251,"results":"71","hashOfConfig":"63"},{"size":587,"mtime":1617424439781,"results":"72","hashOfConfig":"63"},{"size":720,"mtime":1617424439624,"results":"73","hashOfConfig":"63"},{"size":1329,"mtime":1617424439718,"results":"74","hashOfConfig":"63"},{"size":1915,"mtime":1617424439664,"results":"75","hashOfConfig":"63"},{"size":4773,"mtime":1617500427812,"results":"76","hashOfConfig":"63"},{"size":365,"mtime":1617424439772,"results":"77","hashOfConfig":"63"},{"size":1277,"mtime":1617424439729,"results":"78","hashOfConfig":"63"},{"size":419,"mtime":1617424439628,"results":"79","hashOfConfig":"63"},{"size":1715,"mtime":1617424439705,"results":"80","hashOfConfig":"63"},{"size":1602,"mtime":1617427255044,"results":"81","hashOfConfig":"63"},{"size":2288,"mtime":1617424439672,"results":"82","hashOfConfig":"63"},{"size":557,"mtime":1617497516341,"results":"83","hashOfConfig":"63"},{"size":2552,"mtime":1617496383536,"results":"84","hashOfConfig":"63"},{"size":2260,"mtime":1617500502033,"results":"85","hashOfConfig":"63"},{"size":1048,"mtime":1617424439761,"results":"86","hashOfConfig":"63"},{"size":950,"mtime":1617424439606,"results":"87","hashOfConfig":"63"},{"size":1951,"mtime":1617424439611,"results":"88","hashOfConfig":"63"},{"size":799,"mtime":1617424439616,"results":"89","hashOfConfig":"63"},{"size":2049,"mtime":1617497818992,"results":"90","hashOfConfig":"63"},{"size":2339,"mtime":1617501197285,"results":"91","hashOfConfig":"63"},{"size":1801,"mtime":1617702199120,"results":"92","hashOfConfig":"93"},{"size":336,"mtime":1617424439724,"results":"94","hashOfConfig":"93"},{"size":1724,"mtime":1617615132416,"results":"95","hashOfConfig":"93"},{"size":3585,"mtime":1617679891355,"results":"96","hashOfConfig":"93"},{"size":6097,"mtime":1617758397049,"results":"97","hashOfConfig":"93"},{"size":106,"mtime":1617424439758,"results":"98","hashOfConfig":"93"},{"size":183,"mtime":1617424439733,"results":"99","hashOfConfig":"93"},{"size":3300,"mtime":1617698441727,"results":"100","hashOfConfig":"93"},{"size":838,"mtime":1617424439649,"results":"101","hashOfConfig":"93"},{"size":1122,"mtime":1617424439634,"results":"102","hashOfConfig":"93"},{"size":587,"mtime":1617424439781,"results":"103","hashOfConfig":"93"},{"size":1484,"mtime":1617704983700,"results":"104","hashOfConfig":"93"},{"size":1870,"mtime":1617680568358,"results":"105","hashOfConfig":"93"},{"size":2524,"mtime":1617760311233,"results":"106","hashOfConfig":"93"},{"size":1329,"mtime":1617424439718,"results":"107","hashOfConfig":"93"},{"size":736,"mtime":1617701716852,"results":"108","hashOfConfig":"93"},{"size":365,"mtime":1617424439772,"results":"109","hashOfConfig":"93"},{"size":7317,"mtime":1617758667088,"results":"110","hashOfConfig":"93"},{"size":1277,"mtime":1617424439729,"results":"111","hashOfConfig":"93"},{"size":2288,"mtime":1617424439672,"results":"112","hashOfConfig":"93"},{"size":1602,"mtime":1617427255044,"results":"113","hashOfConfig":"93"},{"size":1715,"mtime":1617424439705,"results":"114","hashOfConfig":"93"},{"size":419,"mtime":1617424439628,"results":"115","hashOfConfig":"93"},{"size":594,"mtime":1617667144659,"results":"116","hashOfConfig":"93"},{"size":2574,"mtime":1617758692133,"results":"117","hashOfConfig":"93"},{"size":1048,"mtime":1617424439761,"results":"118","hashOfConfig":"93"},{"size":2552,"mtime":1617496383536,"results":"119","hashOfConfig":"93"},{"size":950,"mtime":1617424439606,"results":"120","hashOfConfig":"93"},{"size":1951,"mtime":1617424439611,"results":"121","hashOfConfig":"93"},{"size":799,"mtime":1617424439616,"results":"122","hashOfConfig":"93"},{"size":394,"mtime":1617597776753,"results":"123","hashOfConfig":"93"},{"size":1147,"mtime":1617698069140,"results":"124","hashOfConfig":"93"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},"5w69t0",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"128"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"128"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"128"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"128"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1mziyzr",{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"193"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"193"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"193"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"193"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},"/mnt/c/Users/jmurp/Documents/codedoc/src/index.tsx",["257"],"import \"bulmaswatch/superhero/bulmaswatch.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport ReactDOM from \"react-dom\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport CellList from \"./components/cell-list\";\nimport AuthForm from \"./components/auth-form\";\nimport MyAccount from \"./components/my-account\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux\";\nimport { useActions } from \"./hooks/use-actions\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nconst App = () => {\n  const { setUser } = useActions();\n  useEffect(() => {\n    (async () => {\n      const { data } = await axios.get(\n        `${\n          process.env.SERVER_URL || \"http://localhost:3005\"\n        }/api/auth/current-user`,\n        {\n          withCredentials: true,\n        }\n      );\n      if (data.currentUser) {\n        setUser(data.currentUser);\n      }\n    })();\n  }, []);\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/' component={CellList} />\n        <Route\n          component={() => <AuthForm formType='signin' />}\n          exact\n          path='/signin'\n        ></Route>\n        <Route exact path='/signup'>\n          <AuthForm formType='signup' />\n        </Route>\n        <Route exact path='/my-account'>\n          <MyAccount />\n        </Route>\n      </Switch>\n\n      {/* <div>\n        <CellList />\n      </div> */}\n    </Router>\n  );\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    {\" \"}\n    <App />{\" \"}\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n",["258","259"],"/mnt/c/Users/jmurp/Documents/codedoc/src/hooks/use-actions.ts",[],"/mnt/c/Users/jmurp/Documents/codedoc/src/components/cell-list.tsx",["260"],"import \"./cell-list.css\";\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\nimport CellListItem from \"./cell-list-item\";\nimport AddCell from \"./add-cell\";\nimport Navbar from \"./navbar\";\nimport React from \"react\";\ninterface CellListProps {}\n\nconst CellList: React.FC<CellListProps> = () => {\n  const cells = useTypedSelector(({ cells: { data, order } }) => {\n    return order.map((id) => data[id]);\n  });\n\n  const renderedCells = cells.map((cell, ind) => {\n    if (cell) {\n      return (\n        <React.Fragment key={cell.id}>\n          <CellListItem cell={cell} />\n          <AddCell previousCellId={cell.id} />\n        </React.Fragment>\n      );\n    }\n  });\n  return (\n    <>\n      <Navbar />\n      <div className=\"cell-list\">\n        {\" \"}\n        <AddCell\n          forceVisibility={cells.length > 0 ? false : true}\n          previousCellId={null}\n        />\n        {renderedCells}\n      </div>\n    </>\n  );\n};\n\nexport default CellList;\n","/mnt/c/Users/jmurp/Documents/codedoc/src/components/auth-form.tsx",["261"],"import \"./auth-form.css\";\nimport { useState, useEffect } from \"react\";\nimport { useActions } from \"../hooks/use-actions\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\nimport { Statement } from \"jscodeshift\";\n\ninterface AuthFormProps {\n  formType: \"signin\" | \"signup\";\n}\nconst AuthForm: React.FC<AuthFormProps> = ({ formType }) => {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const { signin } = useActions();\n  const errors = useTypedSelector((state) => state.user.errors);\n  const user = useTypedSelector((state) => state.user);\n  const emailValidEx = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const passwordValidEx = /^([a-zA-Z0-9 _-]+)$/;\n\n  const validEmail = emailValidEx.test(email.toLowerCase());\n  const validPassword = passwordValidEx.test(password);\n\n  useEffect(() => {\n    if (user.id && !errors.length) {\n      history.push(\"/\");\n    }\n  }, [user, errors, history]);\n  return (\n    <div className=\"form-background\">\n      <div className=\"form-wrapper\">\n        <article className=\"message is-primary\">\n          <div className=\"message-header\">\n            <p>CodeDoc</p>\n          </div>\n          <div className=\"message-body\">\n            Hello! and welcome to codedoc! signup below to start creating your\n            own codedocs, already have an account?{\" \"}\n            <Link to={formType === \"signin\" ? \"/signup\" : \"/signin\"}>\n              {formType === \"signin\" ? \"signup here\" : \"signin here\"}\n            </Link>\n          </div>\n        </article>\n        {errors[0] && errors[0].message && (\n          <article className=\"message is-danger\">\n            <div className=\"message-header\">\n              <p>Error</p>\n            </div>\n            <div className=\"message-body\">{errors[0].message}</div>\n          </article>\n        )}\n        <form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            signin(email, password);\n          }}\n        >\n          <div className=\"field\">\n            <label className=\"label\">Email</label>\n            <div className=\"control has-icons-left has-icons-right\">\n              <input\n                type=\"text\"\n                className={`input is-${validEmail ? \"success\" : \"danger\"}`}\n                placeholder=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n                value={email}\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-user\"></i>\n              </span>\n              <span className=\"icon is-small is-right\">\n                <i\n                  className={`fas fa-${validEmail ? \"check\" : \"times-circle\"}`}\n                ></i>\n              </span>\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\">Password</label>\n            <div className=\"control has-icons-left has-icons-right\">\n              <input\n                value={password}\n                type=\"password\"\n                className={`input is-${\n                  validPassword && password.length > 5 ? \"success\" : \"danger\"\n                }`}\n                placeholder=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-key\"></i>\n              </span>\n              <span className=\"icon is-small is-right\">\n                <i\n                  className={`fas fa-${\n                    validPassword && password.length > 5\n                      ? \"check\"\n                      : \"times-circle\"\n                  }`}\n                ></i>\n              </span>\n            </div>\n          </div>\n          {formType === \"signup\" && (\n            <div className=\"field\">\n              <label className=\"label\">Confirm Password</label>\n              <div className=\"control has-icons-left has-icons-right\">\n                <input\n                  value={confirmPassword}\n                  type=\"password\"\n                  className={`input is-${\n                    validPassword &&\n                    password.length > 5 &&\n                    confirmPassword === password\n                      ? \"success\"\n                      : \"danger\"\n                  }`}\n                  placeholder=\"password\"\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-key\"></i>\n                </span>\n                <span className=\"icon is-small is-right\">\n                  <i\n                    className={`fas fa-${\n                      validPassword &&\n                      password.length > 5 &&\n                      confirmPassword === password\n                        ? \"check\"\n                        : \"times-circle\"\n                    }`}\n                  ></i>\n                </span>\n              </div>\n            </div>\n          )}\n          <div className=\"field\">\n            <div className=\"control\">\n              {formType === \"signin\" ? (\n                <button\n                  type=\"submit\"\n                  disabled={!validEmail || !validPassword}\n                  className=\"button is-link\"\n                >\n                  Submit\n                </button>\n              ) : (\n                <button\n                  disabled={\n                    !validEmail ||\n                    !validPassword ||\n                    confirmPassword !== password\n                  }\n                  className=\"button is-link\"\n                >\n                  Submit\n                </button>\n              )}\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthForm;\n","/mnt/c/Users/jmurp/Documents/codedoc/src/redux/index.ts",[],"/mnt/c/Users/jmurp/Documents/codedoc/src/hooks/use-typed-selector.ts",[],"/mnt/c/Users/jmurp/Documents/codedoc/src/components/add-cell.tsx",[],"/mnt/c/Users/jmurp/Documents/codedoc/src/components/cell-list-item.tsx",[],"/mnt/c/Users/jmurp/Documents/codedoc/src/components/navbar.tsx",["262","263","264","265"],"import { useTypedSelector } from \"../hooks/use-typed-selector\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useActions } from \"../hooks/use-actions\";\nimport SaveCodedoc from \"./save-codedoc\";\nconst Navbar: React.FC = () => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const { signout } = useActions();\n  const user = useTypedSelector((state) => state.user.id);\n\n  return (\n    <nav className='navbar' role='navigation' aria-label='main navigation'>\n      <div className='navbar-brand'>\n        <Link to='/' className='navbar-item' href='https://bulma.io'>\n          <h1 className='is-size-2'>\n            {\"<\"}CodeDoc{\" />\"}\n          </h1>\n        </Link>\n\n        <a\n          role='button'\n          className='navbar-burger'\n          aria-label='menu'\n          aria-expanded='false'\n          data-target='navbarBasicExample'\n        >\n          <span aria-hidden='true'></span>\n          <span aria-hidden='true'></span>\n          <span aria-hidden='true'></span>\n        </a>\n      </div>\n\n      <div id='navbarBasicExample' className='navbar-menu'>\n        <div className='navbar-start'>\n          <a className='navbar-item'>Documentation</a>\n\n          {user && (\n            <>\n              <a onClick={() => setModalOpen(true)} className='navbar-item'>\n                Save\n              </a>\n              <a className='navbar-item'>Share</a>\n            </>\n          )}\n        </div>\n        <div className='navbar-end'>\n          {!user ? (\n            <div className='navbar-item'>\n              <div className='buttons'>\n                <Link to='/signup' className='button is-primary'>\n                  <strong>Sign up</strong>\n                </Link>\n                <Link to='/signin' className='button is-light'>\n                  Log in\n                </Link>\n              </div>\n            </div>\n          ) : (\n            <div className='navbar-item'>\n              <div className='buttons'>\n                <Link to='/my-account' className='button is-primary'>\n                  <strong> My Account</strong>\n                </Link>\n                <button onClick={() => signout()} className='button is-light'>\n                  <strong> Signout</strong>\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      {modalOpen && <SaveCodedoc setModalState={setModalOpen} />}\n    </nav>\n  );\n};\n\nexport default Navbar;\n","/mnt/c/Users/jmurp/Documents/codedoc/src/redux/store.ts",[],"/mnt/c/Users/jmurp/Documents/codedoc/src/components/action-bar.tsx",[],"/mnt/c/Users/jmurp/Documents/codedoc/src/components/text-editor.tsx",[],"/mnt/c/Users/jmurp/Documents/codedoc/src/components/code-cell.tsx",[],"/mnt/c/Users/jmurp/Documents/codedoc/src/redux/action-creators/index.ts",["266"],"/mnt/c/Users/jmurp/Documents/codedoc/src/redux/reducers/index.ts",[],"/mnt/c/Users/jmurp/Documents/codedoc/src/hooks/use-cumulative-code.ts",[],"/mnt/c/Users/jmurp/Documents/codedoc/src/components/action-button.tsx",[],"/mnt/c/Users/jmurp/Documents/codedoc/src/components/resizable.tsx",[],"/mnt/c/Users/jmurp/Documents/codedoc/src/components/preview.tsx",["267"],"import { useRef, useEffect } from \"react\";\nimport \"./preview.css\";\n\ninterface PreviewProps {\n  code: string;\n  err: string;\n}\n\nconst html = `\n  <html>\n    <head>\n        <style>\n            body {\n                background-color: white;\n            } \n        </style> \n    <head>\n    <body>\n      <div id='root'></div> \n      <script>\n        const handleError = (err) => {\n\n            const root = document.getElementById('root');\n            root.innerHTML = '<div style=\"color: red; \"><h4>RUNTIME ERROR</h4>' + err +  '</div>'\n            console.error(err)\n\n        }\n        window.addEventListener('error', (event) => {\n            event.preventDefault()\n            handleError(event.error)\n\n        })\n        window.addEventListener('message', (event) => {\n          try {\n          eval(event.data)\n          } catch(err){\n            handleError(err)\n          }\n        }, false) \n      </script>\n    </body>\n\n  </html>\n\n`;\nconst Preview: React.FC<PreviewProps> = ({ code, err }) => {\n  const iframe = useRef<any>();\n  useEffect(() => {\n    iframe.current.srcdoc = html;\n    let codeDebounce = setTimeout(() => {\n      iframe.current.contentWindow.postMessage(code, \"*\");\n    }, 50);\n    return () => {\n      if (codeDebounce) {\n        clearTimeout(codeDebounce);\n      }\n    };\n  }, [code, iframe.current]);\n  return (\n    <div className='iframe-wrapper'>\n      <iframe\n        title='code preview'\n        ref={iframe}\n        sandbox='allow-scripts'\n        srcDoc={html}\n      />\n      {err && <div className='preview-error'>{err}</div>}\n    </div>\n  );\n};\n\nexport default Preview;\n","/mnt/c/Users/jmurp/Documents/codedoc/src/components/code-editor.tsx",[],"/mnt/c/Users/jmurp/Documents/codedoc/src/redux/action-types/index.ts",[],"/mnt/c/Users/jmurp/Documents/codedoc/src/redux/reducers/cells-reducer.ts",[],"/mnt/c/Users/jmurp/Documents/codedoc/src/redux/reducers/user-reducer.ts",[],"/mnt/c/Users/jmurp/Documents/codedoc/src/redux/reducers/bundles-reducer.ts",[],"/mnt/c/Users/jmurp/Documents/codedoc/src/bundler/index.ts",[],"/mnt/c/Users/jmurp/Documents/codedoc/src/bundler/plugins/fetch-plugin.ts",[],"/mnt/c/Users/jmurp/Documents/codedoc/src/bundler/plugins/unpkg-path-plugin.ts",[],"/mnt/c/Users/jmurp/Documents/codedoc/src/components/my-account.tsx",["268","269","270","271"],"/mnt/c/Users/jmurp/Documents/codedoc/src/components/save-codedoc.tsx",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/index.tsx",["272"],"/mnt/c/Users/jmurp/Documents/codeDoc/src/hooks/use-actions.ts",[],["273","274"],"/mnt/c/Users/jmurp/Documents/codeDoc/src/components/cell-list.tsx",["275","276"],"import \"./cell-list.css\";\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\nimport { useActions } from \"../hooks/use-actions\";\nimport CellListItem from \"./cell-list-item\";\nimport AddCell from \"./add-cell\";\nimport Navbar from \"./navbar\";\nimport ErrorMessage from \"./error-message\";\nimport React, { useEffect } from \"react\";\n\ninterface CellListProps {}\n\nconst CellList: React.FC<CellListProps> = () => {\n  const cells = useTypedSelector(({ cells: { data, order } }) => {\n    return order.map((id) => data[id]);\n  });\n  const errors = useTypedSelector((state) => state.user.errors);\n\n  const { getCodeDoc } = useActions();\n\n  useEffect(() => {\n    let currentUrl: string[] = window.location.href.split(\"/\");\n    currentUrl = currentUrl.filter((el) => el !== \"\");\n    if (currentUrl.length === 4) {\n      const userId: string = currentUrl[currentUrl.length - 2];\n      const documentName = currentUrl[currentUrl.length - 1];\n      getCodeDoc(documentName, null, true, userId);\n    }\n  }, []);\n\n  const renderedCells = cells.map((cell, ind) => {\n    if (cell) {\n      return (\n        <React.Fragment key={cell.id}>\n          <CellListItem cell={cell} />\n          <AddCell previousCellId={cell.id} />\n        </React.Fragment>\n      );\n    }\n  });\n  return (\n    <>\n      <Navbar />\n      {errors !== [] && errors[0] && errors[0].message && (\n        <div style={{ padding: \" 1.5rem\" }}>\n          <ErrorMessage message={errors[0].message} />\n        </div>\n      )}\n      <div className='cell-list'>\n        {\" \"}\n        <AddCell\n          forceVisibility={cells.length > 0 ? false : true}\n          previousCellId={null}\n        />\n        {renderedCells}\n      </div>\n    </>\n  );\n};\n\nexport default CellList;\n","/mnt/c/Users/jmurp/Documents/codeDoc/src/components/my-account.tsx",["277","278","279","280","281","282","283"],"import \"./my-account.css\";\nimport { useEffect, useState, useRef, MouseEvent } from \"react\";\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\nimport { useHistory } from \"react-router-dom\";\nimport { useActions } from \"../hooks/use-actions\";\nimport Navbar from \"./navbar\";\n\nconst MyAccount: React.FC = () => {\n  const [input, setInput] = useState(\"\");\n  const [edit, setEdit] = useState(false);\n  const user = useTypedSelector((state) => state.user.id);\n  const codeDocs = useTypedSelector((state) => state.user.codeDocs);\n  const history = useHistory();\n  let activePanel = useRef<any>();\n  const { getCodeDoc, getUserCodeDocs, deleteCodeDoc } = useActions();\n\n  let codeDocsToShow = codeDocs.map((doc) => doc);\n  codeDocsToShow = codeDocsToShow.map((doc) => {\n    if (doc.includes(input)) {\n      return doc;\n    }\n    return \"\";\n  });\n  useEffect(() => {\n    if (!user) {\n      history.push(\"/signin\");\n    }\n\n    getUserCodeDocs();\n  }, []);\n\n  const handleActiveTab = (e: MouseEvent) => {\n    if (activePanel.current !== e.target) {\n      activePanel.current.classList.toggle(\"is-active\");\n      activePanel.current = e.target;\n      activePanel.current.classList.toggle(\"is-active\");\n      if (activePanel.current.id === \"remove-tab\") {\n        setEdit(true);\n      } else {\n        setEdit(false);\n      }\n    }\n  };\n  return (\n    <>\n      <Navbar />\n      <nav className='panel'>\n        <p className='panel-heading'>CodeDocs</p>\n        <div className='panel-block'>\n          <p className='control has-icons-left'>\n            <input\n              className='input'\n              type='text'\n              placeholder='Search'\n              onChange={(e) => {\n                setInput(e.target.value.toLowerCase());\n              }}\n            />\n            <span className='icon is-left'>\n              <i className='fas fa-search' aria-hidden='true'></i>\n            </span>\n          </p>\n        </div>\n        <p className='panel-tabs'>\n          <a\n            id='view-tab'\n            onClick={handleActiveTab}\n            ref={activePanel}\n            className='is-active'\n          >\n            View\n          </a>\n          <a id='remove-tab' onClick={handleActiveTab}>\n            Remove\n          </a>\n        </p>\n        {!edit\n          ? codeDocsToShow.map((codeDoc) => {\n              if (codeDoc)\n                return (\n                  <a\n                    onClick={() => getCodeDoc(codeDoc, history)}\n                    key={`${Math.random()}-${codeDoc}`}\n                    className='panel-block '\n                  >\n                    <span className='panel-icon'>\n                      <i\n                        className='fas fa-book view-icon'\n                        aria-hidden='true'\n                      ></i>\n                    </span>\n                    {codeDoc}\n                  </a>\n                );\n            })\n          : codeDocsToShow.map((codeDoc) => {\n              if (codeDoc)\n                return (\n                  <a\n                    onClick={() => deleteCodeDoc(codeDoc)}\n                    key={`${Math.random()}-${codeDoc}`}\n                    className='panel-block '\n                  >\n                    <span className='panel-icon remove-icons'>\n                      <i\n                        className='fas fa-times remove-icon'\n                        aria-hidden='true'\n                      ></i>\n                    </span>\n                    {codeDoc}\n                  </a>\n                );\n            })}\n      </nav>\n    </>\n  );\n};\n\nexport default MyAccount;\n","/mnt/c/Users/jmurp/Documents/codeDoc/src/components/auth-form.tsx",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/redux/index.ts",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/hooks/use-typed-selector.ts",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/components/navbar.tsx",["284","285","286"],"import { useTypedSelector } from \"../hooks/use-typed-selector\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useActions } from \"../hooks/use-actions\";\nimport SaveCodedoc from \"./save-codedoc\";\nimport ShareCodedoc from \"./share-codedoc\";\nconst Navbar: React.FC = ({ children }) => {\n  const [saveModalOpen, setSaveModalOpen] = useState(false);\n  const [shareModalOpen, setShareModalOpen] = useState(false);\n  const { signout } = useActions();\n  const user = useTypedSelector((state) => state.user.id);\n  const fullPath = window.location.href.split(\"/\");\n  const path = fullPath[fullPath.length - 1];\n  return (\n    <>\n      <nav className='navbar' role='navigation' aria-label='main navigation'>\n        <div className='navbar-brand'>\n          <Link to='/' className='navbar-item' href='https://bulma.io'>\n            <h1 className='is-size-2'>\n              {\"<\"}CodeDoc{\" />\"}\n            </h1>\n          </Link>\n\n          <a\n            role='button'\n            className='navbar-burger'\n            aria-label='menu'\n            aria-expanded='false'\n            data-target='navbarBasicExample'\n          >\n            <span aria-hidden='true'></span>\n            <span aria-hidden='true'></span>\n            <span aria-hidden='true'></span>\n          </a>\n        </div>\n\n        <div id='navbarBasicExample' className='navbar-menu'>\n          <div className='navbar-start'>\n            <Link to='/' className='navbar-item'>\n              Home\n            </Link>\n            <Link to='/documentation' className='navbar-item'>\n              Documentation\n            </Link>\n\n            {user && path !== \"documentation\" && path !== \"my-account\" && (\n              <>\n                <a\n                  onClick={() => setSaveModalOpen(true)}\n                  className='navbar-item'\n                >\n                  Save\n                </a>\n                <a\n                  onClick={() => setShareModalOpen(true)}\n                  className='navbar-item'\n                >\n                  Share\n                </a>\n              </>\n            )}\n          </div>\n          <div className='navbar-end'>\n            {!user ? (\n              <div className='navbar-item'>\n                <div className='buttons'>\n                  <Link to='/signup' className='button is-primary'>\n                    <strong>Sign up</strong>\n                  </Link>\n                  <Link to='/signin' className='button is-light'>\n                    Log in\n                  </Link>\n                </div>\n              </div>\n            ) : (\n              <div className='navbar-item'>\n                <div className='buttons'>\n                  <Link to='/my-account' className='button is-primary'>\n                    <strong> My Account</strong>\n                  </Link>\n                  <button onClick={() => signout()} className='button is-light'>\n                    <strong> Signout</strong>\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n        {saveModalOpen && <SaveCodedoc setModalState={setSaveModalOpen} />}\n        {shareModalOpen && <ShareCodedoc setModalState={setShareModalOpen} />}\n      </nav>\n      {children}\n    </>\n  );\n};\n\nexport default Navbar;\n","/mnt/c/Users/jmurp/Documents/codeDoc/src/components/cell-list-item.tsx",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/components/add-cell.tsx",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/redux/store.ts",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/components/share-codedoc.tsx",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/components/code-cell.tsx",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/components/save-codedoc.tsx",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/components/text-editor.tsx",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/components/action-bar.tsx",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/redux/reducers/index.ts",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/redux/action-creators/index.ts",["287"],"/mnt/c/Users/jmurp/Documents/codeDoc/src/hooks/use-cumulative-code.ts",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/components/code-editor.tsx",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/components/preview.tsx",["288"],"/mnt/c/Users/jmurp/Documents/codeDoc/src/components/resizable.tsx",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/components/action-button.tsx",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/redux/action-types/index.ts",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/redux/reducers/user-reducer.ts",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/redux/reducers/bundles-reducer.ts",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/redux/reducers/cells-reducer.ts",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/bundler/index.ts",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/bundler/plugins/fetch-plugin.ts",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/bundler/plugins/unpkg-path-plugin.ts",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/components/error-message.tsx",[],"/mnt/c/Users/jmurp/Documents/codeDoc/src/components/documentation.tsx",[],{"ruleId":"289","severity":1,"message":"290","line":30,"column":6,"nodeType":"291","endLine":30,"endColumn":8,"suggestions":"292"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","replacedBy":"296"},{"ruleId":"297","severity":1,"message":"298","line":14,"column":47,"nodeType":"299","messageId":"300","endLine":14,"endColumn":49},{"ruleId":"301","severity":1,"message":"302","line":6,"column":10,"nodeType":"303","messageId":"304","endLine":6,"endColumn":19},{"ruleId":"305","severity":1,"message":"306","line":20,"column":9,"nodeType":"307","endLine":26,"endColumn":10},{"ruleId":"305","severity":1,"message":"306","line":35,"column":11,"nodeType":"307","endLine":35,"endColumn":38},{"ruleId":"305","severity":1,"message":"306","line":39,"column":15,"nodeType":"307","endLine":39,"endColumn":77},{"ruleId":"305","severity":1,"message":"306","line":42,"column":15,"nodeType":"307","endLine":42,"endColumn":42},{"ruleId":"301","severity":1,"message":"308","line":146,"column":9,"nodeType":"303","messageId":"304","endLine":146,"endColumn":17},{"ruleId":"289","severity":1,"message":"309","line":58,"column":6,"nodeType":"291","endLine":58,"endColumn":28,"suggestions":"310"},{"ruleId":"289","severity":1,"message":"311","line":27,"column":6,"nodeType":"291","endLine":27,"endColumn":8,"suggestions":"312"},{"ruleId":"305","severity":1,"message":"306","line":49,"column":11,"nodeType":"307","endLine":49,"endColumn":36},{"ruleId":"297","severity":1,"message":"298","line":51,"column":39,"nodeType":"299","messageId":"300","endLine":51,"endColumn":41},{"ruleId":"305","severity":1,"message":"306","line":54,"column":15,"nodeType":"307","endLine":58,"endColumn":16},{"ruleId":"289","severity":1,"message":"290","line":32,"column":6,"nodeType":"291","endLine":32,"endColumn":8,"suggestions":"313"},{"ruleId":"293","replacedBy":"314"},{"ruleId":"295","replacedBy":"315"},{"ruleId":"289","severity":1,"message":"316","line":28,"column":6,"nodeType":"291","endLine":28,"endColumn":8,"suggestions":"317"},{"ruleId":"297","severity":1,"message":"298","line":30,"column":47,"nodeType":"299","messageId":"300","endLine":30,"endColumn":49},{"ruleId":"289","severity":1,"message":"311","line":30,"column":6,"nodeType":"291","endLine":30,"endColumn":8,"suggestions":"318"},{"ruleId":"305","severity":1,"message":"306","line":65,"column":11,"nodeType":"307","endLine":70,"endColumn":12},{"ruleId":"305","severity":1,"message":"306","line":73,"column":11,"nodeType":"307","endLine":73,"endColumn":56},{"ruleId":"297","severity":1,"message":"298","line":78,"column":42,"nodeType":"299","messageId":"300","endLine":78,"endColumn":44},{"ruleId":"305","severity":1,"message":"306","line":81,"column":19,"nodeType":"307","endLine":85,"endColumn":20},{"ruleId":"297","severity":1,"message":"298","line":96,"column":42,"nodeType":"299","messageId":"300","endLine":96,"endColumn":44},{"ruleId":"305","severity":1,"message":"306","line":99,"column":19,"nodeType":"307","endLine":103,"endColumn":20},{"ruleId":"305","severity":1,"message":"306","line":24,"column":11,"nodeType":"307","endLine":30,"endColumn":12},{"ruleId":"305","severity":1,"message":"306","line":48,"column":17,"nodeType":"307","endLine":51,"endColumn":18},{"ruleId":"305","severity":1,"message":"306","line":54,"column":17,"nodeType":"307","endLine":57,"endColumn":18},{"ruleId":"301","severity":1,"message":"308","line":179,"column":9,"nodeType":"303","messageId":"304","endLine":179,"endColumn":17},{"ruleId":"289","severity":1,"message":"309","line":58,"column":6,"nodeType":"291","endLine":58,"endColumn":28,"suggestions":"319"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.","ArrayExpression",["320"],"no-native-reassign",["321"],"no-negated-in-lhs",["322"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","@typescript-eslint/no-unused-vars","'Statement' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'response' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'iframe.current'. Either exclude it or remove the dependency array. Mutable values like 'iframe.current' aren't valid dependencies because mutating them doesn't re-render the component.",["323"],"React Hook useEffect has missing dependencies: 'getUserCodeDocs', 'history', and 'user'. Either include them or remove the dependency array.",["324"],["325"],["321"],["322"],"React Hook useEffect has a missing dependency: 'getCodeDoc'. Either include it or remove the dependency array.",["326"],["327"],["328"],{"desc":"329","fix":"330"},"no-global-assign","no-unsafe-negation",{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"329","fix":"335"},{"desc":"336","fix":"337"},{"desc":"333","fix":"338"},{"desc":"331","fix":"339"},"Update the dependencies array to be: [setUser]",{"range":"340","text":"341"},"Update the dependencies array to be: [code]",{"range":"342","text":"343"},"Update the dependencies array to be: [getUserCodeDocs, history, user]",{"range":"344","text":"345"},{"range":"346","text":"341"},"Update the dependencies array to be: [getCodeDoc]",{"range":"347","text":"348"},{"range":"349","text":"345"},{"range":"350","text":"343"},[937,939],"[setUser]",[1300,1322],"[code]",[813,815],"[getUserCodeDocs, history, user]",[1052,1054],[998,1000],"[getCodeDoc]",[953,955],[1300,1322]]