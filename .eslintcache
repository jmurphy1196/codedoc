[{"/home/jason/web_apps/codedoc/src/index.tsx":"1","/home/jason/web_apps/codedoc/src/hooks/use-actions.ts":"2","/home/jason/web_apps/codedoc/src/components/cell-list.tsx":"3","/home/jason/web_apps/codedoc/src/components/documentation.tsx":"4","/home/jason/web_apps/codedoc/src/components/my-account.tsx":"5","/home/jason/web_apps/codedoc/src/components/auth-form.tsx":"6","/home/jason/web_apps/codedoc/src/components/navbar.tsx":"7","/home/jason/web_apps/codedoc/src/redux/index.ts":"8","/home/jason/web_apps/codedoc/src/hooks/use-typed-selector.ts":"9","/home/jason/web_apps/codedoc/src/components/error-message.tsx":"10","/home/jason/web_apps/codedoc/src/components/add-cell.tsx":"11","/home/jason/web_apps/codedoc/src/components/cell-list-item.tsx":"12","/home/jason/web_apps/codedoc/src/components/save-codedoc.tsx":"13","/home/jason/web_apps/codedoc/src/components/share-codedoc.tsx":"14","/home/jason/web_apps/codedoc/src/redux/store.ts":"15","/home/jason/web_apps/codedoc/src/components/action-bar.tsx":"16","/home/jason/web_apps/codedoc/src/components/code-cell.tsx":"17","/home/jason/web_apps/codedoc/src/components/text-editor.tsx":"18","/home/jason/web_apps/codedoc/src/redux/reducers/index.ts":"19","/home/jason/web_apps/codedoc/src/redux/action-creators/index.ts":"20","/home/jason/web_apps/codedoc/src/hooks/use-cumulative-code.ts":"21","/home/jason/web_apps/codedoc/src/components/resizable.tsx":"22","/home/jason/web_apps/codedoc/src/components/preview.tsx":"23","/home/jason/web_apps/codedoc/src/components/action-button.tsx":"24","/home/jason/web_apps/codedoc/src/components/code-editor.tsx":"25","/home/jason/web_apps/codedoc/src/redux/reducers/bundles-reducer.ts":"26","/home/jason/web_apps/codedoc/src/redux/reducers/cells-reducer.ts":"27","/home/jason/web_apps/codedoc/src/redux/action-types/index.ts":"28","/home/jason/web_apps/codedoc/src/redux/reducers/user-reducer.ts":"29","/home/jason/web_apps/codedoc/src/bundler/index.ts":"30","/home/jason/web_apps/codedoc/src/bundler/plugins/unpkg-path-plugin.ts":"31","/home/jason/web_apps/codedoc/src/bundler/plugins/fetch-plugin.ts":"32"},{"size":1801,"mtime":1649969539684,"results":"33","hashOfConfig":"34"},{"size":336,"mtime":1649969539684,"results":"35","hashOfConfig":"34"},{"size":1724,"mtime":1650145315254,"results":"36","hashOfConfig":"34"},{"size":1147,"mtime":1649969539684,"results":"37","hashOfConfig":"34"},{"size":3585,"mtime":1649969539684,"results":"38","hashOfConfig":"34"},{"size":6097,"mtime":1649969539684,"results":"39","hashOfConfig":"34"},{"size":3300,"mtime":1649969539684,"results":"40","hashOfConfig":"34"},{"size":106,"mtime":1649969539684,"results":"41","hashOfConfig":"34"},{"size":183,"mtime":1649969539684,"results":"42","hashOfConfig":"34"},{"size":394,"mtime":1649969539684,"results":"43","hashOfConfig":"34"},{"size":1122,"mtime":1649969539684,"results":"44","hashOfConfig":"34"},{"size":838,"mtime":1649969539684,"results":"45","hashOfConfig":"34"},{"size":2524,"mtime":1649969539684,"results":"46","hashOfConfig":"34"},{"size":1769,"mtime":1650145150507,"results":"47","hashOfConfig":"34"},{"size":587,"mtime":1649969539684,"results":"48","hashOfConfig":"34"},{"size":736,"mtime":1649969539684,"results":"49","hashOfConfig":"34"},{"size":1870,"mtime":1649969539684,"results":"50","hashOfConfig":"34"},{"size":1329,"mtime":1649969539684,"results":"51","hashOfConfig":"34"},{"size":365,"mtime":1649969539684,"results":"52","hashOfConfig":"34"},{"size":7317,"mtime":1649969539684,"results":"53","hashOfConfig":"34"},{"size":1277,"mtime":1649969539684,"results":"54","hashOfConfig":"34"},{"size":1715,"mtime":1649969539684,"results":"55","hashOfConfig":"34"},{"size":1602,"mtime":1649969539684,"results":"56","hashOfConfig":"34"},{"size":419,"mtime":1649969539684,"results":"57","hashOfConfig":"34"},{"size":2288,"mtime":1649969539684,"results":"58","hashOfConfig":"34"},{"size":1048,"mtime":1649969539684,"results":"59","hashOfConfig":"34"},{"size":2552,"mtime":1649969539684,"results":"60","hashOfConfig":"34"},{"size":594,"mtime":1649969539684,"results":"61","hashOfConfig":"34"},{"size":2574,"mtime":1649969539684,"results":"62","hashOfConfig":"34"},{"size":950,"mtime":1649969539684,"results":"63","hashOfConfig":"34"},{"size":799,"mtime":1649969539684,"results":"64","hashOfConfig":"34"},{"size":1951,"mtime":1649969539684,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"gjoxy6",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"69"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"69"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"69"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"/home/jason/web_apps/codedoc/src/index.tsx",["136"],"import \"bulmaswatch/superhero/bulmaswatch.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport ReactDOM from \"react-dom\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport CellList from \"./components/cell-list\";\nimport AuthForm from \"./components/auth-form\";\nimport MyAccount from \"./components/my-account\";\nimport Documentation from \"./components/documentation\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux\";\nimport { useActions } from \"./hooks/use-actions\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/navbar\";\n\nconst App = () => {\n  const { setUser } = useActions();\n  useEffect(() => {\n    (async () => {\n      const { data } = await axios.get(\n        `${\n          process.env.SERVER_URL || \"https://code-doc-backend.herokuapp.com\"\n        }/api/auth/current-user`,\n        {\n          withCredentials: true,\n        }\n      );\n      if (data.currentUser) {\n        setUser(data.currentUser);\n      }\n    })();\n  }, []);\n  return (\n    <Router>\n      <Switch>\n        <Route\n          component={() => <AuthForm formType='signin' />}\n          exact\n          path='/signin'\n        ></Route>\n        <Route exact path='/signup'>\n          <AuthForm formType='signup' />\n        </Route>\n        <Route exact path='/my-account'>\n          <MyAccount />\n        </Route>\n        <Route exact path='/documentation'>\n          <Navbar>\n            <Documentation />\n          </Navbar>\n        </Route>\n        <Route path='/' component={CellList} />\n      </Switch>\n\n      {/* <div>\n        <CellList />\n      </div> */}\n    </Router>\n  );\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    {\" \"}\n    <App />{\" \"}\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n",["137","138"],"/home/jason/web_apps/codedoc/src/hooks/use-actions.ts",[],"/home/jason/web_apps/codedoc/src/components/cell-list.tsx",["139","140"],"/home/jason/web_apps/codedoc/src/components/documentation.tsx",[],"/home/jason/web_apps/codedoc/src/components/my-account.tsx",["141","142","143","144","145","146","147"],"import \"./my-account.css\";\nimport { useEffect, useState, useRef, MouseEvent } from \"react\";\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\nimport { useHistory } from \"react-router-dom\";\nimport { useActions } from \"../hooks/use-actions\";\nimport Navbar from \"./navbar\";\n\nconst MyAccount: React.FC = () => {\n  const [input, setInput] = useState(\"\");\n  const [edit, setEdit] = useState(false);\n  const user = useTypedSelector((state) => state.user.id);\n  const codeDocs = useTypedSelector((state) => state.user.codeDocs);\n  const history = useHistory();\n  let activePanel = useRef<any>();\n  const { getCodeDoc, getUserCodeDocs, deleteCodeDoc } = useActions();\n\n  let codeDocsToShow = codeDocs.map((doc) => doc);\n  codeDocsToShow = codeDocsToShow.map((doc) => {\n    if (doc.includes(input)) {\n      return doc;\n    }\n    return \"\";\n  });\n  useEffect(() => {\n    if (!user) {\n      history.push(\"/signin\");\n    }\n\n    getUserCodeDocs();\n  }, []);\n\n  const handleActiveTab = (e: MouseEvent) => {\n    if (activePanel.current !== e.target) {\n      activePanel.current.classList.toggle(\"is-active\");\n      activePanel.current = e.target;\n      activePanel.current.classList.toggle(\"is-active\");\n      if (activePanel.current.id === \"remove-tab\") {\n        setEdit(true);\n      } else {\n        setEdit(false);\n      }\n    }\n  };\n  return (\n    <>\n      <Navbar />\n      <nav className='panel'>\n        <p className='panel-heading'>CodeDocs</p>\n        <div className='panel-block'>\n          <p className='control has-icons-left'>\n            <input\n              className='input'\n              type='text'\n              placeholder='Search'\n              onChange={(e) => {\n                setInput(e.target.value.toLowerCase());\n              }}\n            />\n            <span className='icon is-left'>\n              <i className='fas fa-search' aria-hidden='true'></i>\n            </span>\n          </p>\n        </div>\n        <p className='panel-tabs'>\n          <a\n            id='view-tab'\n            onClick={handleActiveTab}\n            ref={activePanel}\n            className='is-active'\n          >\n            View\n          </a>\n          <a id='remove-tab' onClick={handleActiveTab}>\n            Remove\n          </a>\n        </p>\n        {!edit\n          ? codeDocsToShow.map((codeDoc) => {\n              if (codeDoc)\n                return (\n                  <a\n                    onClick={() => getCodeDoc(codeDoc, history)}\n                    key={`${Math.random()}-${codeDoc}`}\n                    className='panel-block '\n                  >\n                    <span className='panel-icon'>\n                      <i\n                        className='fas fa-book view-icon'\n                        aria-hidden='true'\n                      ></i>\n                    </span>\n                    {codeDoc}\n                  </a>\n                );\n            })\n          : codeDocsToShow.map((codeDoc) => {\n              if (codeDoc)\n                return (\n                  <a\n                    onClick={() => deleteCodeDoc(codeDoc)}\n                    key={`${Math.random()}-${codeDoc}`}\n                    className='panel-block '\n                  >\n                    <span className='panel-icon remove-icons'>\n                      <i\n                        className='fas fa-times remove-icon'\n                        aria-hidden='true'\n                      ></i>\n                    </span>\n                    {codeDoc}\n                  </a>\n                );\n            })}\n      </nav>\n    </>\n  );\n};\n\nexport default MyAccount;\n","/home/jason/web_apps/codedoc/src/components/auth-form.tsx",[],"/home/jason/web_apps/codedoc/src/components/navbar.tsx",["148","149","150"],"import { useTypedSelector } from \"../hooks/use-typed-selector\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useActions } from \"../hooks/use-actions\";\nimport SaveCodedoc from \"./save-codedoc\";\nimport ShareCodedoc from \"./share-codedoc\";\nconst Navbar: React.FC = ({ children }) => {\n  const [saveModalOpen, setSaveModalOpen] = useState(false);\n  const [shareModalOpen, setShareModalOpen] = useState(false);\n  const { signout } = useActions();\n  const user = useTypedSelector((state) => state.user.id);\n  const fullPath = window.location.href.split(\"/\");\n  const path = fullPath[fullPath.length - 1];\n  return (\n    <>\n      <nav className='navbar' role='navigation' aria-label='main navigation'>\n        <div className='navbar-brand'>\n          <Link to='/' className='navbar-item' href='https://bulma.io'>\n            <h1 className='is-size-2'>\n              {\"<\"}CodeDoc{\" />\"}\n            </h1>\n          </Link>\n\n          <a\n            role='button'\n            className='navbar-burger'\n            aria-label='menu'\n            aria-expanded='false'\n            data-target='navbarBasicExample'\n          >\n            <span aria-hidden='true'></span>\n            <span aria-hidden='true'></span>\n            <span aria-hidden='true'></span>\n          </a>\n        </div>\n\n        <div id='navbarBasicExample' className='navbar-menu'>\n          <div className='navbar-start'>\n            <Link to='/' className='navbar-item'>\n              Home\n            </Link>\n            <Link to='/documentation' className='navbar-item'>\n              Documentation\n            </Link>\n\n            {user && path !== \"documentation\" && path !== \"my-account\" && (\n              <>\n                <a\n                  onClick={() => setSaveModalOpen(true)}\n                  className='navbar-item'\n                >\n                  Save\n                </a>\n                <a\n                  onClick={() => setShareModalOpen(true)}\n                  className='navbar-item'\n                >\n                  Share\n                </a>\n              </>\n            )}\n          </div>\n          <div className='navbar-end'>\n            {!user ? (\n              <div className='navbar-item'>\n                <div className='buttons'>\n                  <Link to='/signup' className='button is-primary'>\n                    <strong>Sign up</strong>\n                  </Link>\n                  <Link to='/signin' className='button is-light'>\n                    Log in\n                  </Link>\n                </div>\n              </div>\n            ) : (\n              <div className='navbar-item'>\n                <div className='buttons'>\n                  <Link to='/my-account' className='button is-primary'>\n                    <strong> My Account</strong>\n                  </Link>\n                  <button onClick={() => signout()} className='button is-light'>\n                    <strong> Signout</strong>\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n        {saveModalOpen && <SaveCodedoc setModalState={setSaveModalOpen} />}\n        {shareModalOpen && <ShareCodedoc setModalState={setShareModalOpen} />}\n      </nav>\n      {children}\n    </>\n  );\n};\n\nexport default Navbar;\n","/home/jason/web_apps/codedoc/src/redux/index.ts",[],"/home/jason/web_apps/codedoc/src/hooks/use-typed-selector.ts",[],"/home/jason/web_apps/codedoc/src/components/error-message.tsx",[],"/home/jason/web_apps/codedoc/src/components/add-cell.tsx",[],"/home/jason/web_apps/codedoc/src/components/cell-list-item.tsx",[],"/home/jason/web_apps/codedoc/src/components/save-codedoc.tsx",[],"/home/jason/web_apps/codedoc/src/components/share-codedoc.tsx",[],"/home/jason/web_apps/codedoc/src/redux/store.ts",[],"/home/jason/web_apps/codedoc/src/components/action-bar.tsx",[],"/home/jason/web_apps/codedoc/src/components/code-cell.tsx",[],"/home/jason/web_apps/codedoc/src/components/text-editor.tsx",[],"/home/jason/web_apps/codedoc/src/redux/reducers/index.ts",[],"/home/jason/web_apps/codedoc/src/redux/action-creators/index.ts",["151"],"import { ActionType } from \"../action-types\";\nimport { Dispatch } from \"redux\";\nimport {\n  Direction,\n  DeleteCellAction,\n  MoveCellAction,\n  InsertCellAfterAction,\n  UpdateCellAction,\n  Action,\n} from \"../actions\";\nimport bundle from \"../../bundler/index\";\nimport { CellType } from \"../cell\";\nimport axios from \"axios\";\nimport { History } from \"history\";\n\nimport { Cell } from \"../cell\";\n\nexport const updateCell = (id: string, content: string): UpdateCellAction => {\n  return {\n    type: ActionType.UPDATE_CELL,\n    payload: {\n      id,\n      content,\n    },\n  };\n};\nexport const deleteCell = (id: string): DeleteCellAction => {\n  return {\n    type: ActionType.DELETE_CELL,\n    payload: id,\n  };\n};\nexport const moveCell = (id: string, direction: Direction): MoveCellAction => {\n  return {\n    type: ActionType.MOVE_CELL,\n    payload: {\n      id,\n      direction,\n    },\n  };\n};\nexport const insertCellAfter = (\n  id: string | null,\n  cellType: CellType\n): InsertCellAfterAction => {\n  return {\n    type: ActionType.INSERT_CELL_AFTER,\n    payload: {\n      id,\n      type: cellType,\n    },\n  };\n};\n\nexport const createBundle = (cellId: string, input: string) => {\n  return async (dispatch: Dispatch<Action>) => {\n    dispatch({\n      type: ActionType.BUNDLE_START,\n      payload: {\n        cellId,\n      },\n    });\n\n    const { code, err } = await bundle(input);\n\n    dispatch({\n      type: ActionType.BUNDLE_COMPLETE,\n      payload: {\n        cellId,\n        bundle: {\n          code,\n          err,\n        },\n      },\n    });\n  };\n};\n\ninterface User {\n  id: string;\n  email: string;\n  codeDocs: string[];\n}\n\nexport const setUser = (user: User) => {\n  const { codeDocs, email, id } = user;\n  return {\n    type: ActionType.SIGN_IN,\n    payload: {\n      email,\n      id,\n      codeDocs,\n    },\n  };\n};\n\nexport const signinOrSignup = (\n  email: string,\n  password: string,\n  confirmPassword: string | null = null\n) => {\n  return async (dispatch: Dispatch<Action>) => {\n    dispatch({\n      type: ActionType.LOADING_USER,\n      payload: {\n        loading: true,\n      },\n    });\n\n    try {\n      let response;\n      if (!confirmPassword) {\n        response = await axios.post(\n          process.env.SERVER_URL ||\n            \"https://code-doc-backend.herokuapp.com/api/auth/signin\",\n          { email, password },\n          {\n            withCredentials: true,\n          }\n        );\n      } else {\n        response = await axios.post(\n          process.env.SERVER_URL ||\n            \"https://code-doc-backend.herokuapp.com/api/auth/signup\",\n          { email, password, confirmPassword },\n          {\n            withCredentials: true,\n          }\n        );\n      }\n      const { data } = response;\n      console.log(data);\n      if (data.email) {\n        dispatch({\n          type: ActionType.CLEAR_USER_ERROR,\n          payload: {\n            errors: [],\n          },\n        });\n        dispatch({\n          type: ActionType.SIGN_IN,\n          payload: {\n            codeDocs: data.codeDocs,\n            id: data.id,\n            email: data.email,\n          },\n        });\n      }\n      console.log(data);\n    } catch (err) {\n      console.log(err.request.response);\n      if (err.request.response) {\n        dispatch({\n          type: ActionType.SET_USER_ERROR,\n          payload: JSON.parse(err.request.response),\n        });\n      } else {\n        dispatch({\n          type: ActionType.SET_USER_ERROR,\n          payload: {\n            errors: [\n              {\n                message: \"Network error\",\n                code: 500,\n              },\n            ],\n          },\n        });\n        dispatch({\n          type: ActionType.CLEAR_LOADING_USER,\n          payload: { loading: false },\n        });\n      }\n    }\n  };\n};\n\nexport const signout = () => {\n  const response = axios.post(\n    `${\n      process.env.SERVER_URL || \"https://code-doc-backend.herokuapp.com\"\n    }/api/auth/signout`,\n    {},\n    { withCredentials: true }\n  );\n\n  return {\n    type: ActionType.SIGN_OUT,\n  };\n};\n\nexport const getCodeDoc = (\n  codeDoc: string,\n  history: History | null = null,\n  isShared = false,\n  sharedUserId: string | null = null\n) => {\n  return async (dispatch: Dispatch<Action>) => {\n    let response;\n    try {\n      if (!isShared) {\n        response = await axios.get(\n          `${\n            process.env.SERVER_URL || \"https://code-doc-backend.herokuapp.com\"\n          }/api/codedoc/${codeDoc}`,\n          {\n            withCredentials: true,\n          }\n        );\n      } else {\n        response = await axios.get(\n          `${\n            process.env.SERVER_URL || \"https://code-doc-backend.herokuapp.com\"\n          }/api/codedoc/share/${sharedUserId}/${codeDoc}`,\n          {\n            withCredentials: true,\n          }\n        );\n      }\n      const { data } = response;\n\n      console.log(data);\n      if (!data.errors) {\n        dispatch({\n          type: ActionType.LOAD_CODEDOC,\n          payload: {\n            data: data.data,\n            order: data.order,\n            currentDoc: codeDoc,\n          },\n        });\n        if (history) {\n          history.push(\"/\");\n        }\n      }\n    } catch (err) {\n      console.log(\"THERE WAS AN ERROR\");\n      if (err.response?.data) {\n        dispatch({\n          type: ActionType.SET_USER_ERROR,\n          payload: {\n            errors: err.response.data.errors,\n          },\n        });\n      } else {\n        dispatch({\n          type: ActionType.SET_USER_ERROR,\n          payload: {\n            errors: [\n              {\n                message: err.toJSON().message,\n                code: 500,\n              },\n            ],\n          },\n        });\n      }\n    }\n  };\n};\n\ninterface codeDocState {\n  order: string[];\n  data: {\n    [key: string]: Cell;\n  };\n}\n\nexport const saveCodeDoc = (codeDoc: codeDocState, documentName: string) => {\n  return async (dispatch: Dispatch<Action>) => {\n    const { data } = await axios.post(\n      `${\n        process.env.SERVER_URL || \"https://code-doc-backend.herokuapp.com\"\n      }/api/codedoc/save-code-doc`,\n      {\n        codeDoc,\n        documentName,\n      },\n      { withCredentials: true }\n    );\n\n    if (!data.errors) {\n      dispatch({\n        type: ActionType.SAVE_CODEDOC,\n        payload: {\n          codeDoc: documentName,\n        },\n      });\n    }\n  };\n};\n\nexport const getUserCodeDocs = () => {\n  return async (dispatch: Dispatch<Action>) => {\n    const { data } = await axios.get(\n      `${\n        process.env.SERVER_URL || \"https://code-doc-backend.herokuapp.com\"\n      }/api/codedoc`,\n      { withCredentials: true }\n    );\n\n    if (!data.errors) {\n      dispatch({\n        type: ActionType.GET_CODEDOCS,\n        payload: data,\n      });\n    }\n  };\n};\n\nexport const deleteCodeDoc = (documentName: string) => {\n  return async (dispatch: Dispatch<Action>) => {\n    const { data } = await axios.post(\n      `${\n        process.env.SERVER_URL || \"https://code-doc-backend.herokuapp.com\"\n      }/api/codedoc/remove-code-doc`,\n      { documentName },\n      { withCredentials: true }\n    );\n    if (!data.errors) {\n      dispatch({\n        type: ActionType.DELETE_CODEDOC,\n        payload: {\n          documentName,\n        },\n      });\n    }\n  };\n};\n\nexport const clearUserError = () => {\n  return {\n    type: ActionType.CLEAR_USER_ERROR,\n    payload: {\n      errors: [],\n    },\n  };\n};\n","/home/jason/web_apps/codedoc/src/hooks/use-cumulative-code.ts",[],"/home/jason/web_apps/codedoc/src/components/resizable.tsx",[],"/home/jason/web_apps/codedoc/src/components/preview.tsx",["152"],"import { useRef, useEffect } from \"react\";\nimport \"./preview.css\";\n\ninterface PreviewProps {\n  code: string;\n  err: string;\n}\n\nconst html = `\n  <html>\n    <head>\n        <style>\n            body {\n                background-color: white;\n            } \n        </style> \n    <head>\n    <body>\n      <div id='root'></div> \n      <script>\n        const handleError = (err) => {\n\n            const root = document.getElementById('root');\n            root.innerHTML = '<div style=\"color: red; \"><h4>RUNTIME ERROR</h4>' + err +  '</div>'\n            console.error(err)\n\n        }\n        window.addEventListener('error', (event) => {\n            event.preventDefault()\n            handleError(event.error)\n\n        })\n        window.addEventListener('message', (event) => {\n          try {\n          eval(event.data)\n          } catch(err){\n            handleError(err)\n          }\n        }, false) \n      </script>\n    </body>\n\n  </html>\n\n`;\nconst Preview: React.FC<PreviewProps> = ({ code, err }) => {\n  const iframe = useRef<any>();\n  useEffect(() => {\n    iframe.current.srcdoc = html;\n    let codeDebounce = setTimeout(() => {\n      iframe.current.contentWindow.postMessage(code, \"*\");\n    }, 50);\n    return () => {\n      if (codeDebounce) {\n        clearTimeout(codeDebounce);\n      }\n    };\n  }, [code, iframe.current]);\n  return (\n    <div className='iframe-wrapper'>\n      <iframe\n        title='code preview'\n        ref={iframe}\n        sandbox='allow-scripts'\n        srcDoc={html}\n      />\n      {err && <div className='preview-error'>{err}</div>}\n    </div>\n  );\n};\n\nexport default Preview;\n","/home/jason/web_apps/codedoc/src/components/action-button.tsx",[],"/home/jason/web_apps/codedoc/src/components/code-editor.tsx",[],"/home/jason/web_apps/codedoc/src/redux/reducers/bundles-reducer.ts",[],"/home/jason/web_apps/codedoc/src/redux/reducers/cells-reducer.ts",[],"/home/jason/web_apps/codedoc/src/redux/action-types/index.ts",[],"/home/jason/web_apps/codedoc/src/redux/reducers/user-reducer.ts",[],"/home/jason/web_apps/codedoc/src/bundler/index.ts",[],"/home/jason/web_apps/codedoc/src/bundler/plugins/unpkg-path-plugin.ts",[],"/home/jason/web_apps/codedoc/src/bundler/plugins/fetch-plugin.ts",[],{"ruleId":"153","severity":1,"message":"154","line":32,"column":6,"nodeType":"155","endLine":32,"endColumn":8,"suggestions":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"153","severity":1,"message":"161","line":28,"column":6,"nodeType":"155","endLine":28,"endColumn":8,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":30,"column":47,"nodeType":"165","messageId":"166","endLine":30,"endColumn":49},{"ruleId":"153","severity":1,"message":"167","line":30,"column":6,"nodeType":"155","endLine":30,"endColumn":8,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":65,"column":11,"nodeType":"171","endLine":70,"endColumn":12},{"ruleId":"169","severity":1,"message":"170","line":73,"column":11,"nodeType":"171","endLine":73,"endColumn":56},{"ruleId":"163","severity":1,"message":"164","line":78,"column":42,"nodeType":"165","messageId":"166","endLine":78,"endColumn":44},{"ruleId":"169","severity":1,"message":"170","line":81,"column":19,"nodeType":"171","endLine":85,"endColumn":20},{"ruleId":"163","severity":1,"message":"164","line":96,"column":42,"nodeType":"165","messageId":"166","endLine":96,"endColumn":44},{"ruleId":"169","severity":1,"message":"170","line":99,"column":19,"nodeType":"171","endLine":103,"endColumn":20},{"ruleId":"169","severity":1,"message":"170","line":24,"column":11,"nodeType":"171","endLine":30,"endColumn":12},{"ruleId":"169","severity":1,"message":"170","line":48,"column":17,"nodeType":"171","endLine":51,"endColumn":18},{"ruleId":"169","severity":1,"message":"170","line":54,"column":17,"nodeType":"171","endLine":57,"endColumn":18},{"ruleId":"172","severity":1,"message":"173","line":179,"column":9,"nodeType":"174","messageId":"175","endLine":179,"endColumn":17},{"ruleId":"153","severity":1,"message":"176","line":58,"column":6,"nodeType":"155","endLine":58,"endColumn":28,"suggestions":"177"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.","ArrayExpression",["178"],"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"React Hook useEffect has a missing dependency: 'getCodeDoc'. Either include it or remove the dependency array.",["181"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'getUserCodeDocs', 'history', and 'user'. Either include them or remove the dependency array.",["182"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has an unnecessary dependency: 'iframe.current'. Either exclude it or remove the dependency array. Mutable values like 'iframe.current' aren't valid dependencies because mutating them doesn't re-render the component.",["183"],{"desc":"184","fix":"185"},"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [setUser]",{"range":"192","text":"193"},"Update the dependencies array to be: [getCodeDoc]",{"range":"194","text":"195"},"Update the dependencies array to be: [getUserCodeDocs, history, user]",{"range":"196","text":"197"},"Update the dependencies array to be: [code]",{"range":"198","text":"199"},[1052,1054],"[setUser]",[998,1000],"[getCodeDoc]",[953,955],"[getUserCodeDocs, history, user]",[1300,1322],"[code]"]